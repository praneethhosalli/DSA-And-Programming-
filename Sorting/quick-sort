class Solution:

    def piviothelper(self , nums , low , high):
        piviot = nums[low]

        i = low 
        j = high 

        while(i<j):
            while(nums[i]<= piviot and i<high):
                i+=1
            while(nums[j]>piviot and j > low ):
                j-=1
            if i < j :
                nums[i] , nums[j] = nums[j] , nums[i ]
        nums[j] , nums[low] = nums[low] , nums[j]
        return j 



    def quickSortHelper(self , nums , low , high ):
        if low < high:
            piviot = self.piviothelper(nums , low , high)
            self.quickSortHelper(nums , low , piviot-1)
            self.quickSortHelper(nums , piviot+1 , high)




    def quickSort(self, nums):

        n = len(nums)

        self.quickSortHelper(nums , 0 , n-1)

        return nums 
