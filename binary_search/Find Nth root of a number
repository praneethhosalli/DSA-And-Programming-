class Solution:

    def Pow (self , i , n , m  ):
        ans = 1
        for _ in range(n):
            ans *= i
            if ans > m :
                return 2 

        if ans ==  m :
            return 1 
        return 0

    def NthRoot(self, n, m):

        left = 1
        right = m 

        while (left<= right ):
            mid = (left + right) // 2 

            ans = self.Pow(mid , n , m )

            if ans == 1 :
                return mid 

            elif ans  == 0 :
                left = mid + 1 

            else :
                right  = mid -1   

        return -1

