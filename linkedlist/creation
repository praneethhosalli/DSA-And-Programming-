class Node:
    def __init__(self , data  , next = None):
        self .data = data
        self . next = next
        
class LinkedList:
    @staticmethod
    def convertarr2ll( arr):
        
        head = Node(arr[0])
        mover = head
        
        for i in range(1 , len(arr)):
            temp = Node(arr[i])
            mover.next =  temp
            mover = temp 
            
        return head
        
def removehead(head):
        
        if head == None :
            return head
            
        head = head.next
        return head 
        
def removetail(tail):
    
    if head is None or head.next is None:
        return None
    prev = head
    curr = head.next
    print(prev)
    print(curr)
    while( curr.next != None):
        prev = curr
        curr = curr.next
    prev.next = None
    return head 
    
def display(head):
    ans = []
    
    if head == None :
        return ans 
    
    curr = head
        
    while(curr is not  None):
        ans.append(curr.data)
        curr = curr.next
       
    return ans 
    
    

arr = [ 1501,2372,5465,8978]
head = LinkedList.convertarr2ll(arr)
head = removehead(head)
tail = removetail(head)
ans = display(tail)
print(ans)
