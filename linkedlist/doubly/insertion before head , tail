# Definition of doubly linked list:
# class ListNode:
#     def __init__(self, val=0, next=None, prev=None):
#         self.val = val
#         self.next = next
#         self.prev = prev

class Solution:
    def insertBeforeHead(self, head, X):


        newnode = ListNode(X , head , None )

        head.prev = newnode 

        return newnode


// tail 
# Definition of doubly linked list:
# class ListNode:
#     def __init__(self, val=0, next=None, prev=None):
#         self.val = val
#         self.next = next
#         self.prev = prev

class Solution:
    def insertBeforeTail(self, head, X):

        curr = head 

        if (curr.next == None ):
            newnode = ListNode(X , curr , None)
            curr.prev = newnode
            return newnode 

        while(curr.next ) :
            curr = curr.next 

        before = curr.prev 

        newnode  = ListNode(X , curr , before )

        before.next = newnode 
        curr.prev = newnode 

        return head 
